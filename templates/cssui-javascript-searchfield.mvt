
MMSearchField.prototype.Search_Callback_old = MMSearchField.prototype.Search_Callback;

MMSearchField.prototype.Search_Callback = function( response, original_search_value ) {

	/* remove empty items */
	var filtered = response.data.filter(function (el) {
	  return el.menuitem;
	});
	response.data = filtered

	this.Search_Callback_old( response, original_search_value );
}



MMSearchField.prototype.Menu_Show = function () {
	if (this.menu_visible) {
		return;
	}

	this.menu_visible = true;
};

MMSearchField.prototype.Menu_Hide = function () {
	if (this.menu_visible) {
		return;
	}

	this.menu_visible = true;
};

MMSearchField.prototype.onMenuAppendHeader = function () {
	return null;
};

MMSearchField.prototype.onMenuAppendItem = function (data) {
	if (data.includes('_sample')) {
		return null;
	}	

	let span;

	span = newElement('div', {'class': 'u-text-center t-search-preview__item'}, null, null);
	span.innerHTML = data;

	return span;
};

MMSearchField.prototype.onMenuAppendStoreSearch = function (search_value) {
	let item;

	item = newElement('div', {'class': 'x-search-preview__search-all'}, null, null);
	item.element_text = newTextNode('Search store for... "' + search_value + '"', item);

	return item;
};

MMSearchField.prototype.onFocus = function () {
	this.element_menu.classList.toggle('x-search-preview--open');
};

MMSearchField.prototype.onBlur = function () {
	this.element_menu.classList.toggle('x-search-preview--open');
};


/**
 * Uncomment this to debug the layout styles of the results container.
 */
/*
MMSearchField.prototype.Menu_Empty = function() {
	this.Menu_Item_Select( null );
};
*/


/**
 * Global search controls.
 */
(function () {
	'use strict';

	let searchOpeners = document.querySelectorAll('[data-hook="open-search"]');
	let searchCloser = document.querySelector('[data-hook="close-search"]');

	/**
	 * Open global search and set focus to the input field.
	 */
	searchOpeners.forEach(function (searchOpener) {
		searchOpener.addEventListener('click', function (event) {
			event.preventDefault();
			document.documentElement.classList.toggle('has-active-search-preview');
			document.querySelector('[data-hook="global-search"]').focus();
		});
	});

	/**
	 * Close global search.
	 */
	searchCloser.addEventListener('click', function (event) {
		event.preventDefault();

		document.documentElement.classList.toggle('has-active-search-preview');
	});

	/**
	 * Close global search when the `Esc` key is pressed.
	 */
	window.addEventListener('keydown', function (keyEvent) {
		if (keyEvent.defaultPrevented) {
			return; // Do nothing if the event was already processed
		}

		switch (keyEvent.key) {
			case 'Escape':
				if (document.documentElement.classList.contains('has-active-search-preview')) {
					document.documentElement.classList.toggle('has-active-search-preview');
				}
				break;
			default:
				return;
		}

		keyEvent.preventDefault();
	}, true);
}());